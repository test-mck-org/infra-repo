
name: PRODUCT_UPDATE_ENVIRONMENT_TAGS

on:   
  workflow_dispatch: 
    inputs:
      app1_tag:
        type: string
        required: false
      app2_tag:
        type: string
        required: false
      environment:
        type: choice
        required: true
        options: ['dev','prod','qa']
        default: "dev"
  
  workflow_call: 
    inputs: 
      app1_tag:
        type: string
        required: false
      app2_tag:
        type: string
        required: false
      environment:
        type: string
        required: true
    secrets:
      CLOUD_ARTIFACTORY_PASS:
        required: true
      CLOUD_ARTIFACTORY_USER:
        required: true

jobs:
  update-environment-tags:
    env:
      REGISTRY: mckinsey-docker.jfrog.io
    runs-on: [ubuntu-latest]
    permissions: 
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.4.0
        with: 
          fetch-depth: 0
          path: './infra'
          ref: main
          
      - uses: actions/github-script@v6
        id: script
        timeout-minutes: 10
        with:
          debug: true
          script: |
            const token = process.env['ACTIONS_RUNTIME_TOKEN']
            const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL']
            core.setOutput('TOKEN', token.trim())
            core.setOutput('IDTOKENURL', runtimeUrl.trim())
            
      - run: |
          IDTOKEN=$(curl -H "Authorization: bearer  ${{steps.script.outputs.TOKEN}}" ${{steps.script.outputs.IDTOKENURL}}  -H "Accept: application/json; api-version=2.0" -H "Content-Type: application/json" -d "{}" | jq -r '.value')
          cd infra
          echo $IDTOKEN > token_file
          touch test_file_6
          git add .
          git config user.name svc-eti-github
          git config user.email "eti_dev_team_&_ews@mckinsey.com"
          git commit -m "Update compile image version"
          git push origin
          
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::468804646140:role/role-migfactory-14313-git-provisioningagent
          aws-region: us-east-1
          
